{"version":3,"file":"getInstallationIdAsync.js","sourceRoot":"","sources":["../../src/environment/getInstallationIdAsync.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,WAAW,MAAM,mBAAmB,CAAC;AACjD,OAAO,MAAM,MAAM,SAAS,CAAC;AAE7B,MAAM,mBAAmB,GAAG,gBAAgB,CAAC;AAE7C,MAAM,CAAC,OAAO,CAAC,KAAK,UAAU,sBAAsB;IAClD,MAAM,sBAAsB,GAAG,MAAM,WAAW,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;IACnF,IAAI,sBAAsB,EAAE;QAC1B,OAAO,sBAAsB,CAAC;KAC/B;IAED,MAAM,iBAAiB,GAAG,MAAM,EAAE,CAAC;IACnC,MAAM,WAAW,CAAC,YAAY,CAAC,mBAAmB,EAAE,iBAAiB,EAAE;QACrE,kBAAkB,EAAE,WAAW,CAAC,mCAAmC;KACpE,CAAC,CAAC;IACH,OAAO,iBAAiB,CAAC;AAC3B,CAAC","sourcesContent":["import * as SecureStore from 'expo-secure-store';\nimport uuidv4 from 'uuid/v4';\n\nconst INSTALLATION_ID_KEY = 'installationId';\n\nexport default async function getInstallationIdAsync() {\n  const existingInstallationId = await SecureStore.getItemAsync(INSTALLATION_ID_KEY);\n  if (existingInstallationId) {\n    return existingInstallationId;\n  }\n\n  const newInstallationId = uuidv4();\n  await SecureStore.setItemAsync(INSTALLATION_ID_KEY, newInstallationId, {\n    keychainAccessible: SecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY,\n  });\n  return newInstallationId;\n}\n"]}